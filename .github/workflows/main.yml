name: Validate and publish package to npmjs
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Setting an environment variable with the value of a configuration variable
  CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: dcarbone/install-jq-action@v1.0.1
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - run: npm ci
      - run: npm test
      - run: npm run lint

      - name: Get current repo version
        run: |
          echo "PACKAGE_NAME=$(cat package.json | jq -r .name)" >> $GITHUB_ENV
          echo "PACKAGE_VERSION=$(cat package.json | jq -r .version)" >> $GITHUB_ENV
          echo "HAVE_COVERAGE_SCRIPT=$(jq 'if .scripts.coverage == null then false else true end' package.json)" >> $GITHUB_ENV

      - name: Get current npmjs version for ${{env.PACKAGE_NAME}}
        run: |
          echo "NPM_VERSION=$(curl -s https://registry.npmjs.org/${{ env.PACKAGE_NAME }} | jq -r '."dist-tags".latest')" >> $GITHUB_ENV

      # code coverage part
      - run: npm run coverage
        if: |
          github.ref == 'refs/heads/main' &&
          env.CC_TEST_REPORTER_ID != '' &&
          env.HAVE_COVERAGE_SCRIPT == 'true'

      - name: Push coverage to Code Climate Test Reporter
        if: |
          github.ref == 'refs/heads/main' &&
          env.CC_TEST_REPORTER_ID != '' &&
          env.HAVE_COVERAGE_SCRIPT == 'true'
        uses: aktions/codeclimate-test-reporter@v1
        with:
          codeclimate-test-reporter-id: ${{ env.CC_TEST_REPORTER_ID }}

      # npm publish when PR done
      - name: Publish ${{env.PACKAGE_NAME}} ${{env.PACKAGE_VERSION}}
        run: npm publish --access public
        if: |
          github.ref == 'refs/heads/main' &&
          env.NPM_TOKEN != '' &&
          env.PACKAGE_VERSION != env.NPM_VERSION
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
